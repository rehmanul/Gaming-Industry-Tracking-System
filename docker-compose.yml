version: '3.8'

services:
  gaming-tracker:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: gaming-industry-tracker
    restart: unless-stopped
    
    ports:
      - "3000:3000"
    
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=info
      - ENABLE_HEALTH_CHECKS=true
      - ENABLE_METRICS=true
    
    env_file:
      - .env
    
    volumes:
      - ./logs:/app/logs
      - ./credentials.json:/app/credentials.json:ro
      - /etc/localtime:/etc/localtime:ro
    
    networks:
      - gaming-tracker-network
    
    depends_on:
      - redis
    
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { if (res.statusCode === 200) process.exit(0); else process.exit(1); }).on('error', () => process.exit(1));"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    security_opt:
      - no-new-privileges:true
    
    read_only: true
    tmpfs:
      - /tmp
      - /app/logs
    
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7-alpine
    container_name: gaming-tracker-redis
    restart: unless-stopped
    
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-defaultpassword}
    
    volumes:
      - redis-data:/data
    
    networks:
      - gaming-tracker-network
    
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
    
    security_opt:
      - no-new-privileges:true

  nginx:
    image: nginx:alpine
    container_name: gaming-tracker-nginx
    restart: unless-stopped
    
    ports:
      - "80:80"
      - "443:443"
    
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    
    networks:
      - gaming-tracker-network
    
    depends_on:
      - gaming-tracker
    
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    
    security_opt:
      - no-new-privileges:true

networks:
  gaming-tracker-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  redis-data:
    driver: local